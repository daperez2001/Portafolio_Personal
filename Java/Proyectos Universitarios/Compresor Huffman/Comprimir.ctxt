#BlueJ class context
comment0.target=Comprimir
comment0.text=\r\n\ Este\ clase\ comprime\ los\ datos\ del\ archivo\ recibido.\r\n\ @author\ Daniel\ P\u00E9rez\r\n\ @author\ Randy\ Sancho\r\n\ @author\ Yerlan\ Irola\r\n\ @version\ 29/11/21\r\n
comment1.params=nombreArchivo
comment1.target=java.lang.String[][]\ generarMatriz(java.lang.String)
comment1.text=\r\n\ Este\ Metodo\ genera\ una\ matriz\ con\ numeros\ binarios\ a\ partir\ del\ archivo\ recibido.\r\n\ @param\ nombreArchivo\r\n\ este\ parametro\ es\ el\ archivo\ recibido\ de\ parte\ del\ usuario.\r\n\ @return\ matriz\r\n\ devuelve\ la\ matriz\ con\ los\ equivalentes\ binarios\ del\ archivo.\r\n
comment10.params=matriz
comment10.target=java.lang.String[][]\ ordenarMatriz(java.lang.String[][])
comment10.text=\r\n\ Este\ Metodo\ ordena\ la\ matriz\ dependiendo\ de\ cuantas\ veces\ aparece\ un\ caracter\ en\ el\ texto.\ \r\n\ @param\ matriz\r\n\ esta\ es\ la\ matriz\ recibida.\r\n\ @return\ Matriz\r\n\ regresa\ la\ matriz\ ya\ ordenada.\r\n
comment2.params=nomArchivo\ bits
comment2.target=void\ guardarArchivoHuf(java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Este\ Metodo\ guarda\ el\ archivo\ ya\ comprimido\ y\ agrega\ los\ bits\ faltantes.\r\n\ @param\ nombreArchivo\r\n\ este\ parametro\ es\ el\ archivo\ recibido\ de\ parte\ del\ usuario.\r\n\ @param\ bits\r\n\ este\ string\ son\ los\ bits\ comprimidos\ recolectados\ del\ arbol.\r\n
comment3.params=bits
comment3.target=int\ bitsSobrantes(java.lang.String)
comment3.text=\r\n\ Este\ Metodo\ guarda\ el\ archivo\ ya\ comprimido\ y\ agrega\ los\ bits\ faltantes.\r\n\ @param\ nombreArchivo\r\n\ este\ parametro\ es\ el\ archivo\ recibido\ de\ parte\ del\ usuario.\r\n\ @param\ bits\r\n\ este\ string\ son\ los\ bits\ comprimidos\ recolectados\ del\ arbol.\r\n
comment4.params=bits\ bitsSobrantes
comment4.target=java.lang.String\ rellenarBytes(java.lang.String,\ int)
comment4.text=\r\n\ Este\ Metodo\ rellena\ los\ bits\ faltantes\ de\ los\ datos.\ \r\n\ @param\ bits\r\n\ este\ string\ son\ los\ bits\ comprimidos\ recolectados\ del\ arbol.\r\n\ @param\ bitsSobrantes\r\n\ este\ parametro\ es\ el\ numero\ de\ bits\ que\ faltan\ en\ los\ datos.\r\n
comment5.params=nomArchivo
comment5.target=java.lang.String\ newNameHuf(java.lang.String)
comment5.text=\r\n\ Este\ Metodo\ cambia\ el\ nombre\ del\ archivo\ a\u00F1adiendole\ un\ ".huf"\ \r\n\ @param\ nomArchivo\r\n\ este\ string\ es\ el\ nombre\ del\ archivo\ recibido.\r\n\ @return\ nomArchivo\r\n\ regresa\ el\ nombre\ del\ archivo\ con\ ".huf"\ a\u00F1adido\r\n
comment6.params=
comment6.target=java.lang.String[][]\ CrearMatrizASCII()
comment6.text=\r\n\ Este\ Metodo\ crea\ la\ matriz\ de\ binarios\ con\ los\ caracteres.\ \r\n\ @param\ nomArchivo\r\n\ este\ string\ es\ el\ nombre\ del\ archivo\ recibido.\r\n\ @return\ matriz\r\n\ regresa\ la\ matriz\ con\ binarios.\r\n
comment7.params=matriz
comment7.target=java.lang.String[][]\ rellenarCade(java.lang.String[][])
comment7.text=\r\n\ Este\ Metodo\ crea\ la\ matriz\ de\ binarios\ con\ los\ caracteres.\ \r\n\ @param\ nomArchivo\r\n\ este\ string\ es\ el\ nombre\ del\ archivo\ recibido.\r\n\ @return\ matriz\r\n\ regresa\ la\ matriz\ con\ binarios.\r\n
comment8.params=matriz
comment8.target=int\ contadorChar(java.lang.String[][])
comment8.text=\r\n\ Este\ Metodo\ cuenta\ los\ caracteres\ que\ hay\ en\ la\ matriz.\ \r\n\ @param\ matriz\r\n\ esta\ matriz\ es\ la\ matriz\ de\ binarios.\r\n\ @return\ contadorChar\r\n\ regresa\ el\ numero\ de\ caracteres.\r\n
comment9.params=matriz
comment9.target=java.lang.String[][]\ OptimizarMatriz(java.lang.String[][])
comment9.text=\r\n\ Este\ Metodo\ remueve\ los\ caracteres\ no\ usados\ de\ la\ matriz.\ \r\n\ @param\ matriz\r\n\ esta\ matriz\ es\ la\ matriz\ de\ binarios.\r\n\ @return\ newMatriz\r\n\ regresa\ la\ matriz\ ya\ optimizada.\r\n
numComments=11
