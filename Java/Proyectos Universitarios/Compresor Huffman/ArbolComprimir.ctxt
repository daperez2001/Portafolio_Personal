#BlueJ class context
comment0.target=ArbolComprimir
comment0.text=\r\n\ Este\ clase\ hace\ el\ arbol\ para\ comprimir\ los\ datos.\r\n\ @author\ Daniel\ P\u00E9rez\r\n\ @author\ Randy\ Sancho\r\n\ @author\ Yerlan\ Irola\r\n\ @version\ 29/11/21\r\n
comment1.params=matriz
comment1.target=ArbolComprimir(java.lang.String[][])
comment1.text=\r\n\ Este\ es\ el\ constructor\ de\ la\ clase\ ArbolComprimir.\r\n\ @param\ matriz\r\n\ este\ es\ la\ matriz\ que\ se\ env\u00EDa\ para\ rellenar\ el\ arbol.\r\n
comment2.params=
comment2.target=java.lang.String\ getDatosComprimidos()
comment2.text=\r\n\ Este\ metodo\ es\ un\ get\ que\ devuelve\ los\ datos\ comprimidos.\r\n\ @return\ datosComprimidos\r\n\ devuelve\ los\ datos\ del\ arbol\ mas\ los\ bits.\r\n
comment3.params=nodo\ matriz\ iterador
comment3.target=void\ agregarElementos(Nodo,\ java.lang.String[][],\ int)
comment3.text=\r\n\ Este\ metodo\ agrega\ elementos\ al\ arbol\ binario.\r\n\ @param\ nodo\r\n\ este\ parametro\ es\ un\ objeto\ nodo.\r\n\ @param\ matriz\r\n\ este\ parametro\ es\ la\ matriz\ de\ binarios.\r\n\ @param\ iterador\r\n\ este\ parametro\ es\ el\ valor\ el\ cual\ se\u00F1ala\ espacio\ en\ matriz.\r\n
comment4.params=
comment4.target=java.lang.String\ leerArbol1()
comment4.text=\r\n\ Este\ metodo\ regresa\ un\ string\ con\ el\ arbol\ binario\ mediante\ el\ llamado\ del\ metodo\ leerArbol.\r\n\ @return\ arbol\r\n\ regresa\ el\ valor\ string\ para\ poder\ imprimir\ el\ arbol.\r\n
comment5.params=nodo\ arbol
comment5.target=java.lang.String\ leerArbol(Nodo,\ java.lang.String)
comment5.text=\r\n\ Este\ metodo\ crea\ un\ string\ en\ la\ que\ muestra\ el\ arbol\ binario.\r\n\ @param\ nodo\r\n\ este\ parametro\ es\ un\ objeto\ nodo.\r\n\ @param\ arbol\r\n\ este\ parametro\ es\ un\ string\ al\ cual\ se\ le\ va\ a\ a\u00F1adir\ la\ lectura\ del\ arbol\r\n\ @return\ arbol\r\n\ regresa\ el\ valor\ string\ para\ poder\ imprimir\ el\ arbol.\r\n
comment6.params=matriz
comment6.target=java.lang.String[][]\ nuevaRepresentacion(java.lang.String[][])
comment6.text=\r\n\ Este\ metodo\ asigna\ los\ valores\ de\ las\ letras\ comprimidos.\r\n\ @param\ matriz\r\n\ este\ parametro\ la\ matriz\ enviada.\r\n\ @return\ matriz\r\n\ regresa\ la\ matriz\ con\ los\ nuevos\ valores\ asignados.\r\n
comment7.params=matriz
comment7.target=int\ caracteresTotales(java.lang.String[][])
comment7.text=\r\n\ Este\ metodo\ cuenta\ cuantos\ caracteres\ tiene\ en\ total\ la\ matriz.\r\n\ @param\ matriz\r\n\ este\ parametro\ es\ la\ matriz\ con\ los\ datos\ que\ se\ van\ a\ contar.\r\n\ @return\ contador\r\n\ regresa\ el\ valor\ total\ de\ los\ caracteres\ que\ se\ encuentran\ en\ la\ matriz.\r\n
comment8.params=matriz
comment8.target=java.lang.String\ lineaDeDatosBits(java.lang.String[][])
comment8.text=\r\n\ Este\ metodo\ crea\ la\ linea\ de\ datos.\r\n\ @param\ matriz\r\n\ este\ parametro\ es\ la\ matriz\ con\ los\ datos\ que\ se\ trabajar\u00E1n.\r\n\ @return\ lineaDeDatos\r\n\ regresa\ el\ string\ con\ la\ linea\ de\ datos\ en\ ella.\r\n
comment9.params=buscarValor\ valor
comment9.target=boolean\ posiciones(java.lang.String,\ java.lang.String)
comment9.text=\r\n\ Este\ metodo\ indica\ la\ posici\u00F3n\ en\ la\ que\ van\ los\ caracteres.\r\n\ @param\ buscarValor\r\n\ este\ parametro\ es\ el\ valor\ bucado.\r\n\ @param\ valor\r\n\ este\ parametro\ es\ valor\ ingresado.\r\n\ @return\ boolean\r\n\ regresa\ la\ condici\u00F3n\ si\ se\ encuentra\ o\ no\ en\ la\ posici\u00F3n.\r\n
numComments=10
